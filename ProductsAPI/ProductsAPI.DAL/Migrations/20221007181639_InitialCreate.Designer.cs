// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductsAPI.DAL.Data;

#nullable disable

namespace ProductsAPI.DAL.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    [Migration("20221007181639_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductsAPI.DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Test Category 1",
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Test Category 2",
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Test Category 3",
                            Name = "Category 3"
                        });
                });

            modelBuilder.Entity("ProductsAPI.DAL.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Test Product",
                            Name = "Product 1",
                            Price = 20m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Test Product",
                            Name = "Product 2",
                            Price = 21m,
                            Quantity = 21
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Test Product",
                            Name = "Product 3",
                            Price = 22m,
                            Quantity = 22
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Test Product",
                            Name = "Product 4",
                            Price = 23m,
                            Quantity = 23
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Test Product",
                            Name = "Product 5",
                            Price = 24m,
                            Quantity = 24
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Test Product",
                            Name = "Product 6",
                            Price = 25m,
                            Quantity = 25
                        });
                });

            modelBuilder.Entity("ProductsAPI.DAL.Models.Product", b =>
                {
                    b.HasOne("ProductsAPI.DAL.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductsAPI.DAL.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
